/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { ERC20Pool, ERC20PoolInterface } from "../../contracts/ERC20Pool";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "erc20",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newAmount",
        type: "uint256",
      },
    ],
    name: "LockedAmount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "erc20",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferedAmount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "erc20",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newAmount",
        type: "uint256",
      },
    ],
    name: "UnlockedAmount",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20Address",
        type: "address",
      },
    ],
    name: "getLockedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20Address",
        type: "address",
      },
    ],
    name: "getUnLockedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20Address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "lockedErc20Balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setOptionTrigger",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20Address",
        type: "address",
      },
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transferTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_erc20Address",
        type: "address",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "unlockedErc20Balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6115ec8061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b14610150578063929ec5371461016e5780639a87b6681461019e578063a5f2a152146101ce578063f1d2ec1d146101ea578063f2fde38b14610206576100a9565b806302e4160f146100ae578063282d3fdf146100ca5780632d789bfc146100e6578063715018a6146101165780637688913a14610120575b600080fd5b6100c860048036038101906100c39190610e97565b610222565b005b6100e460048036038101906100df9190610efa565b6102df565b005b61010060048036038101906100fb9190610f78565b610467565b60405161010d9190610fb4565b60405180910390f35b61011e61047f565b005b61013a60048036038101906101359190610f78565b610493565b6040516101479190610fb4565b60405180910390f35b6101586104ab565b6040516101659190610fde565b60405180910390f35b61018860048036038101906101839190610e97565b6104d4565b6040516101959190610fb4565b60405180910390f35b6101b860048036038101906101b39190610e97565b61058e565b6040516101c59190610fb4565b60405180910390f35b6101e860048036038101906101e39190610ff9565b610648565b005b61020460048036038101906101ff919061104c565b610975565b005b610220600480360381019061021b9190610e97565b610c67565b005b61022a610cea565b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361029a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610291906110e9565b60405180910390fd5b81600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b81600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361034f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610346906110e9565b60405180910390fd5b60008211610392576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038990611155565b60405180910390fd5b81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103e191906111a4565b925050819055507fef796ad91fbed3c93c8b68b1b06294c1037fa534484d1e4058850c04e46af5bb8383600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460405161045a939291906111d8565b60405180910390a1505050565b60026020528060005260406000206000915090505481565b610487610cea565b6104916000610d68565b565b60016020528060005260406000206000915090505481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600081600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610546576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053d906110e9565b60405180910390fd5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b600081600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610600576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f7906110e9565b60405180910390fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b33600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d09061125b565b60405180910390fd5b83600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610749576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610740906110e9565b60405180910390fd5b600060149054906101000a900460ff161561076357600080fd5b6001600060146101000a81548160ff02191690831515021790555082600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610800576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f7906112c7565b60405180910390fd5b82600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461084f91906112e7565b9250508190555060008573ffffffffffffffffffffffffffffffffffffffff166323b872dd3087876040518463ffffffff1660e01b81526004016108959392919061131b565b6020604051808303816000875af11580156108b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d8919061138a565b90508061091a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091190611403565b60405180910390fd5b7f461e9d4417faf896009ccae91420eb51c5591f4cb25208c56a8fa5854cb43739868560405161094b929190611423565b60405180910390a15060008060146101000a81548160ff0219169083151502179055505050505050565b33600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a06576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fd9061125b565b60405180910390fd5b81600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6d906110e9565b60405180910390fd5b60008411610ab9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab090611155565b60405180910390fd5b83600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610b3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3290611498565b60405180910390fd5b83600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b8a91906111a4565b9250508190555083600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610be091906112e7565b925050819055507fc54f2f935d495cde63a6a396c24bf4791aa0679df902d9be10a5ebaee52ce0128385600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051610c59939291906111d8565b60405180910390a150505050565b610c6f610cea565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cde576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd59061152a565b60405180910390fd5b610ce781610d68565b50565b610cf2610e2c565b73ffffffffffffffffffffffffffffffffffffffff16610d106104ab565b73ffffffffffffffffffffffffffffffffffffffff1614610d66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5d90611596565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e6482610e39565b9050919050565b610e7481610e59565b8114610e7f57600080fd5b50565b600081359050610e9181610e6b565b92915050565b600060208284031215610ead57610eac610e34565b5b6000610ebb84828501610e82565b91505092915050565b6000819050919050565b610ed781610ec4565b8114610ee257600080fd5b50565b600081359050610ef481610ece565b92915050565b60008060408385031215610f1157610f10610e34565b5b6000610f1f85828601610e82565b9250506020610f3085828601610ee5565b9150509250929050565b6000610f4582610e59565b9050919050565b610f5581610f3a565b8114610f6057600080fd5b50565b600081359050610f7281610f4c565b92915050565b600060208284031215610f8e57610f8d610e34565b5b6000610f9c84828501610f63565b91505092915050565b610fae81610ec4565b82525050565b6000602082019050610fc96000830184610fa5565b92915050565b610fd881610e59565b82525050565b6000602082019050610ff36000830184610fcf565b92915050565b60008060006060848603121561101257611011610e34565b5b600061102086828701610e82565b935050602061103186828701610e82565b925050604061104286828701610ee5565b9150509250925092565b6000806040838503121561106357611062610e34565b5b600061107185828601610ee5565b925050602061108285828601610e82565b9150509250929050565b600082825260208201905092915050565b7f5a65726f20616464726573730000000000000000000000000000000000000000600082015250565b60006110d3600c8361108c565b91506110de8261109d565b602082019050919050565b60006020820190508181036000830152611102816110c6565b9050919050565b7f416d6f756e74206e6f742076616c696400000000000000000000000000000000600082015250565b600061113f60108361108c565b915061114a82611109565b602082019050919050565b6000602082019050818103600083015261116e81611132565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006111af82610ec4565b91506111ba83610ec4565b92508282019050808211156111d2576111d1611175565b5b92915050565b60006060820190506111ed6000830186610fcf565b6111fa6020830185610fa5565b6112076040830184610fa5565b949350505050565b7f43616c6c6572206973206e6f742076616c696400000000000000000000000000600082015250565b600061124560138361108c565b91506112508261120f565b602082019050919050565b6000602082019050818103600083015261127481611238565b9050919050565b7f4e6f7420656e6f75676820756e6c6f636b656420746f6b656e73000000000000600082015250565b60006112b1601a8361108c565b91506112bc8261127b565b602082019050919050565b600060208201905081810360008301526112e0816112a4565b9050919050565b60006112f282610ec4565b91506112fd83610ec4565b925082820390508181111561131557611314611175565b5b92915050565b60006060820190506113306000830186610fcf565b61133d6020830185610fcf565b61134a6040830184610fa5565b949350505050565b60008115159050919050565b61136781611352565b811461137257600080fd5b50565b6000815190506113848161135e565b92915050565b6000602082840312156113a05761139f610e34565b5b60006113ae84828501611375565b91505092915050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b60006113ed600f8361108c565b91506113f8826113b7565b602082019050919050565b6000602082019050818103600083015261141c816113e0565b9050919050565b60006040820190506114386000830185610fcf565b6114456020830184610fa5565b9392505050565b7f4e6f7420656e6f756768206c6f636b656420746f6b656e730000000000000000600082015250565b600061148260188361108c565b915061148d8261144c565b602082019050919050565b600060208201905081810360008301526114b181611475565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061151460268361108c565b915061151f826114b8565b604082019050919050565b6000602082019050818103600083015261154381611507565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061158060208361108c565b915061158b8261154a565b602082019050919050565b600060208201905081810360008301526115af81611573565b905091905056fea2646970667358221220e09c2820741e73367e6fb3536b96db78008d22d125f2f45c40c07cf0feddb00464736f6c63430008110033";

type ERC20PoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20PoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Pool__factory extends ContractFactory {
  constructor(...args: ERC20PoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20Pool> {
    return super.deploy(overrides || {}) as Promise<ERC20Pool>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC20Pool {
    return super.attach(address) as ERC20Pool;
  }
  override connect(signer: Signer): ERC20Pool__factory {
    return super.connect(signer) as ERC20Pool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20PoolInterface {
    return new utils.Interface(_abi) as ERC20PoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Pool {
    return new Contract(address, _abi, signerOrProvider) as ERC20Pool;
  }
}
